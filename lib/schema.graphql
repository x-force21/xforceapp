type User {
    _id: ID 
    nombre: String
    apellido: String
    email: String
    contrasena: String
    documentType: String
    documentId: String
    rol: String
    estado: String
    inscriptionUser: [Inscriptions] 
    }

type Project {
    _id: ID
    codigoProyecto: String
    nombre: String
    objGenerales: String
    objEspecificos: String
    presupuesto: Int
    fInicio: String
    fFinal: String
    estadoProyecto: String
    fase: String
    advanceProject: [Advance] 
    documentoLider: String
    nombreLider: String
    }

type Advance {
    _id: ID
    fecha: String
    descripcion: String
    LeadObserv: String
}

type Inscriptions {
    _id: ID
    UserID: ID
    codigoInscripcion: String
    codigoProyecto: String
    inscripcionStatus: String
    fechaIngreso: String
    fechaEgreso: String
    estadoInscription: String
}

input UserInput {
    nombre: String!
    apellido: String!
    email: String!
    contrasena: String!
    documentType: String!
    documentId: String!
    rol: String!
    estado: String
    inscriptionUser: String
}

input UserStateInput{
    estado: String
}

input UserEditInput {
    nombre: String
    apellido: String
    email: String
    contrasena: String
    documentId: String
    inscriptionUser: String
}

input ProjectInput {
    codigoProyecto: String!
    nombre: String!
    objGenerales: String!
    objEspecificos: String!
    presupuesto: Int!
    fInicio: String!
    fFinal: String!
    estadoProyecto: String
    fase: String
    documentoLider: String!
    nombreLider: String!
}

input EditProjectInput {
    nombre: String
    objGenerales: String
    objEspecificos: String
    presupuesto: Int
    fInicio: String 
    fFinal: String
    estadoProyecto: String
    fase: String
    documentoLider: String
    nombreLider: String
    }
    
input InscriptionsInput {
    UserID: ID
    codigoProyecto: String!
    estadoInscription: String
    fechaIngreso: Int
    fechaEgreso: Int
}

input InscriptionStateInput{
    estadoInscription: String!
    fechaIngreso: Int!
}

input AdvanceInput {
    advanceCode: String!
    codigoProyecto: ID!
    fecha: Int!
    descripcion: String!
    LeadObserv: String
}

input EditAdvanceInput {
    advanceCode: String
    codigoProyecto: ID
    fecha: Int
    descripcion: String
    LeadObserv: String
}

type Query {
    "Devuelve todos los usuarios"
    getUsers: [User]
    "Devuelve un usuario"
    getUser (id:ID!): User
    "Devuelve el listado de proyectos registrados"
    getProjects: [Project]
    "Devuelve el proyecto indicado"
    getUnicProject(projectCode: String, projectName: String): Project
    "Devuelve un proyecto"
    getProject (id:ID!): Project
    "Devuelve listado de proyectos por documento del lider"
    getProjectsByFilter(leaderDocument:String ):[Project]
    "Devuelve los avances"
    getAvances (id:ID!): [Advance]
    "Devuelve un avance"
    getAvance (id:ID!): Advance 
    "Devuelve los avances del usuario"
    getAdvanceUser (UserID: ID): Advance 
    "Devuelve todos las inscripciones"
    getInscriptions: [Inscriptions]
    "Devuelve una inscripcion"
    getInscription (id:ID!): Inscriptions
     
}

type Mutation {
    
    "Registra un usuario"
    registerUser (input: UserInput): User
    
    "Autoriza o No Autoriza a un usuario"
    editUserState (_id: ID!, input:UserStateInput): User
    
    "Edita la informacion personal de un usuario"
    editUserInfo (_id: ID!, input: UserEditInput): User

    "Registra un proyecto"
    registerProject (input: ProjectInput): Project

    "Actualiza el proyecto"
    editProject (_id: ID!, input:EditProjectInput): Project

    "Registra una inscripcion"
    inscriptionProject (input: InscriptionsInput): Inscriptions

    "Activo o No activa la inscripcion"
    editInscriptionState (_id: ID!, input:InscriptionStateInput): Inscriptions

    "Registra un avance"
    addAdvance (input: AdvanceInput): Advance

    "Adicionar un avance al proyecto"
    addAdvancetoProject(projectID: ID!, advanceID: ID!): Project

    "Adicionar una inscripcion al usuario"
    addInscriptiontoUser(userID: ID!, inscriptionID: ID!): User

    "Actualiza el avance"
    editAvance (_id: ID!, input:EditAdvanceInput): Advance
}